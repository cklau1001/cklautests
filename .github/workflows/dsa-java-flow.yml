name: DSA Java workflow
run-name: ${{ github.actor }}
on:
  push:
   paths:
     - dsa/java/**
env:
  CHECKOUT_PATH: 'dsa/java'
  JAVA_VERSION: '24'
  JAVA_VENDOR: 'oracle'

jobs:
  init-workflow:
    runs-on: ubuntu-latest
    outputs:
      checkout_path: ${{ steps.init_checkout_path.outputs.checkout_path }}
      java_version: ${{ steps.init_java_version.outputs.java_version }}
      java_vendor: ${{ steps.init_java_vendor.outputs.java_vendor }}
    steps:
      - name: Initialize CHECKOUT_PATH
        id: init_checkout_path
        run: echo "checkout_path=$CHECKOUT_PATH" >> $GITHUB_OUTPUT
      - name: Initialize JAVA_VERSION
        id: init_java_version
        run: echo "java_version=$JAVA_VERSION" >> $GITHUB_OUTPUT
      - name: Initialize JAVA_VENDOR
        id: init_java_vendor
        run: echo "java_vendor=$JAVA_VENDOR" >> $GITHUB_OUTPUT

  java-lint:
    permissions:
      contents: read
      statuses: write
    uses: ./.github/workflows/linter-java-subflow.yml
    with:
      checkout_path: ${{ needs.init-workflow.outputs.checkout_path }}
    needs: [init-workflow]

  dsa-java-workflow:
    needs: [java-lint]
    runs-on: ubuntu-latest
    steps:
      - run: echo "DSA Java workflow triggered by ${{ github.event_name }} event."
      - run: echo "Runner=${{ runner.os }}, branch=${{ github.ref }}, repo=${{ github.repository }}"
      - name: Check out code on ${{ env.CHECKOUT_PATH }}
        uses: actions/checkout@v4
        with:
          sparse-checkout: ${{ env.CHECKOUT_PATH }}
          sparse-checkout-cone-mode: false
      - run: echo "Code checked out"
      - name: Listing files
        run: |
          ls ${{ github.workspace }}
          echo " "
          ls ${{ github.workspace }}/$CHECKOUT_PATH
      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}
          cache: maven
      - run: java -version
      - name: Build with Maven
        working-directory: ./${{ env.CHECKOUT_PATH }}
        run: mvn verify
      - name: Generate coverage report (Cicirello)
        uses: cicirello/jacoco-badge-generator@v2.12.1
        with:
          jacoco-csv-file: ./${{ env.CHECKOUT_PATH }}/target/site/jacoco/jacoco.csv
          generate-branches-badge: true
      - name: Commit the badge (if it changed)
        run: |          
          if [[ `git status --porcelain *.svg *.json` ]]; then
            git config --global user.name 'github-actions'
            git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
            git add -A *.svg *.json
            git commit -m "Autogenerated JaCoCo coverage badge" *.svg *.json
            git push
          fi
            
